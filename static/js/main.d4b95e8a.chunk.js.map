{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/MovieDetail.js","components/RedirectPage.js","App.js","index.js"],"names":["About","href","Movie","id","year","title","summary","poster","genres","className","src","alt","to","pathname","state","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","MovieDetail","props","location","history","undefined","push","classes","style","height","width","Table","TableRow","align","TableCell","Button","variant","color","RedirectPage","window","open","match","params","alert","size","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wPAUeA,MARf,WACI,OACI,gCACI,4CACA,mBAAGC,KAAK,+EAAR,sB,gFCsCGC,MApCf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAGC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC7C,OAEI,cADA,CACA,OAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,eAAf,UACA,cAAC,IAAD,CAAMG,GAAI,CACNC,SAAS,UAAD,OAAWV,GACnBW,MAAM,CACFV,KAAKA,EACLC,QACAC,UACAC,SACAC,WAPR,SAUA,oBAAIC,UAAU,eAAd,SAA8BJ,MAE9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAA+BD,EAAOO,KAAI,SAACC,EAAMC,GAAP,OAAiB,oBAAgBR,UAAU,gBAA1B,SAA2CO,GAAlCC,QACpE,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAE,KAA/C,gBCyBGC,G,kNA/CbL,MAAQ,CACNM,WAAY,EACZC,OAAS,I,EAIXC,U,sBAAY,8BAAAC,EAAA,sEAEmCC,IAAMC,IAAI,yDAF7C,gBAEcJ,EAFd,EAEHK,KAAQA,KAASL,OAGxB,EAAKM,SAAS,CAACN,SAAQD,WAAY,IALzB,2C,kEAWVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKd,MAA3BM,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASZ,UAAU,YAAnB,SACGW,EACE,qBAAKX,UAAU,SAAf,SACD,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACIY,EAAON,KAAK,SAAAc,GAAK,OACjB,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GAjCN4B,IAAMC,Y,MCOVC,MATf,WACI,OACI,sBAAKxB,UAAU,MAAf,UACI,cAAC,IAAD,CAAMG,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,mCC2DGsB,E,kLA1DU,IAAD,EACcN,KAAKO,MAA3BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACIC,IAAnBF,EAAStB,OACRuB,EAAQE,KAAK,O,+BAIGX,KAAKO,MAAjBK,QADF,IAEEJ,EAAaR,KAAKO,MAAlBC,SAFH,EAG2CR,KAAKO,MAAMC,SAAStB,MAA7DV,EAHF,EAGEA,KAAMC,EAHR,EAGQA,MAAOC,EAHf,EAGeA,QAASC,EAHxB,EAGwBA,OAAQC,EAHhC,EAGgCA,OAGrC,OAAK4B,EAAStB,MAEN,sBAAK2B,MAAO,CAACC,OAAO,IAAKC,MAAQ,QAAjC,UACA,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAUC,MAAM,QAAhB,SACA,eAACC,EAAA,EAAD,CAAWD,MAAM,QAAjB,cAA6B,qBAAKpC,IAAKH,IAAvC,SAEA,eAACsC,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAWD,MAAM,SAAjB,4BACA,eAACC,EAAA,EAAD,eAAc3C,QAElB,eAACyC,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAWD,MAAM,SAAjB,4BACA,eAACC,EAAA,EAAD,eAAc1C,QAElB,eAACwC,EAAA,EAAD,WACA,cAACE,EAAA,EAAD,CAAWD,MAAM,SAAjB,4BACA,eAACC,EAAA,EAAD,eAAczC,QAEd,eAACuC,EAAA,EAAD,WACA,cAACE,EAAA,EAAD,CAAWD,MAAM,SAAjB,4BACA,eAACC,EAAA,EAAD,eAAavC,EAAOO,KAAI,SAACC,EAAMC,GAAP,OAAiB,6BAAiBD,GAARC,eAGlD,uBAEA,cAAC,IAAD,CAAML,GAAI,CACNC,SAAS,WAAD,OAAYR,IADxB,SAGI,cAAC2C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAlC,4DAEJ,uBAEA,uBAEA,cAAC,IAAD,CAAMtC,GAAG,IAAT,SACI,cAACoC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,4CAMD,S,GAzDOnB,IAAMC,WCyBjBmB,E,kLAtBPC,OAAOC,KAAK,yDAA2DzB,KAAKO,MAAMmB,MAAMC,OAAOlD,S,+BAIzF,IACCkD,EAAU3B,KAAKO,MAAMmB,MAArBC,OAGP,OAFAC,MAAMD,EAAOlD,MAAM,2GAGf,gCACI,6BAAKkD,EAAOlD,QACZ,uBACJ,cAAC,IAAD,CAAMO,GAAG,IAAT,SACI,cAACoC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUO,KAAK,QAAjD,sD,GAjBW1B,IAAMC,WCelB0B,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1C,IACxC,cAAC,IAAD,CAAOwC,KAAK,iBAAiBE,UAAWV,IACxC,cAAC,IAAD,CAAOQ,KAAK,SAASE,UAAW7D,IAChC,cAAC,IAAD,CAAO2D,KAAK,aAAaE,UAAW3B,QCX1C4B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.d4b95e8a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>README.md </h1>\r\n            <a href=\"https://raw.githubusercontent.com/gyeolse/movie_application/master/README.md\">LINK</a>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Movie.css\";\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n//state가 필요 없으므로, class component일 필요는 없음.\r\n\r\nfunction Movie({id,year, title, summary, poster, genres}) {\r\n    return ( \r\n        //추가. route 설정\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movies__data\">\r\n            <Link to={{\r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year:year, //ES6에서는 year만 쳐줘도 됨\r\n                    title,\r\n                    summary,\r\n                    poster,\r\n                    genres\r\n                }\r\n            }} >\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            </Link>                            \r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">{genres.map((genre,index) => <li key={index} className=\"genres__genre\">{genre}</li> )}</ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//id는 num, \r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired, \r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading : true,\r\n    movies : []\r\n  }\r\n\r\n  //async와 await. async : 기다려줘. await : 뭘기다릴건지에 대해서 앞에다가 달아주기. 이걸 해야 자바스크립트가 기다려줌\r\n  getMovies = async () => {\r\n    //ES6. movies.data.data.movies와 같다.\r\n    const {data : {data : { movies } } } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"); //기다림이 필요하므로, componentDidMount가 끝날때까지 대기 필요. 때문에 async\r\n\r\n    //this.setState({movies : movies});와 같다. \r\n    this.setState({movies, isLoading : false });\r\n\r\n//    console.log(movies);\r\n  }\r\n  //componentDidMount에서 data를 fetch하는 역할을 함. \r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state; // ES6\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading \r\n        ? (<div className=\"loader\">\r\n          <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n      ) : (\r\n        <div className=\"movies\">\r\n          { movies.map( movie => (\r\n            <Movie\r\n              key={movie.id} \r\n              id={movie.id} \r\n              year={movie.year} \r\n              title={movie.title} \r\n              summary={movie.summary} \r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n            /> \r\n         ))} \r\n      </div>\r\n    )}\r\n    </section>\r\n    );\r\n    }\r\n}\r\nexport default Home;\r\n\r\n\r\n\r\n//ES6\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Navigation.css\"\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport {Table, TableBody, TableHead, TableRow, TableCell, Button} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport {Link, Route} from 'react-router-dom';\r\n\r\nclass MovieDetail extends React.Component {\r\n//{id,year, title, summary, poster, genres}\r\n\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { location } = this.props;\r\n        const {year, title, summary, poster, genres } = this.props.location.state;\r\n        const {searchurl} = \"https://google.com/\" + title;\r\n\r\n        if(!!location.state){\r\n            return (\r\n                <div style={{height:400, width : '100%' }}>\r\n                <Table>\r\n                <TableRow align='right'>\r\n                <TableCell align='right'  > {<img src={poster}></img>} </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell align='center'> 년도 </TableCell>\r\n                    <TableCell > {year}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell align='center'> 제목 </TableCell>\r\n                    <TableCell > {title}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                <TableCell align='center'> 요약 </TableCell>\r\n                <TableCell > {summary}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                <TableCell align='center'> 장르 </TableCell>\r\n                <TableCell> {genres.map((genre,index) => <li key={index}>{genre}</li>)}</TableCell>\r\n                </TableRow>\r\n                </Table>\r\n                <br>\r\n                </br>\r\n                <Link to={{\r\n                    pathname:`/search/${title}`\r\n                }}>\r\n                    <Button variant=\"contained\" color=\"secondary\" >상세 페이지 검색</Button>\r\n                </Link>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                <Link to=\"/\">\r\n                    <Button variant=\"contained\" color=\"primary\">뒤로 이동</Button>\r\n                </Link>\r\n\r\n                </div> \r\n            )        \r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default MovieDetail;\r\n","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass RedirectPage extends React.Component {\r\n\r\n    componentDidMount(){\r\n//        window.location.replace('https://search.naver.com/search.naver?ie=UTF-8&&query=' + this.props.match.params.title);\r\n        window.open('https://search.naver.com/search.naver?ie=UTF-8&&query=' + this.props.match.params.title);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {params} = this.props.match;\r\n        alert(params.title+\" 에 대한 네이버 검색 결과로 이동합니다.\");\r\n\r\n        return (\r\n            <div>\r\n                <h1>{params.title}</h1>\r\n                <br></br>\r\n            <Link to=\"/\">\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\">홈으로 이동</Button>\r\n            </Link>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RedirectPage;\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport About from \"./routes/About\"; //이름ㄹ이 같을 필요는 없음 About as Potato라고 해도 됨.\r\nimport Home from './routes/Home';\r\nimport Navigation from './components/Navigation';\r\nimport MovieDetail from './routes/MovieDetail';\r\nimport RedirectPage from './components/RedirectPage';\r\n\r\nfunction App () {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/search/:title\" component={RedirectPage} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie/:id\" component={MovieDetail} />\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default App;\r\n\r\n/**\r\n * //추가 movie-detail에 id값을 받고자 할 때 `/:id` 이런 식으로, 그 후 라우터 세팅\r\n * 리액트 라우터 : url을 가져와서, 비교하고, match가 되면, 보여줌 \r\n * /가 라우트로 여겨짐. /도 그리고 /about도 그린거임 => 두개를 동시에 렌더링함 \r\n * 해결책 exact = {true} 세팅. url이 /일때만 home을 렌더링해줌. /something 이면 무시 \r\n * exact는 이거 아니면 렌더링 안한다임 \r\n * \r\n * Navigation은 Router의 안에 존재해야한다. Navigation 내의 Link 컴포넌트가 라우터 안에 존재해야 하기 때문이다. \r\n * HashRouter 대신, Browserrouter는 `#`같은 것이 없다. BrowerRouter 사용해도 된다. but, github Pages에서 설정하는 것이 어렵다.\r\n\r\n */","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}